(define (number=? a b)
  (and (number? a) (number? b) (= a b)))
(define (number<? a b)
  (and (number? a) (number? b) (< a b)))
(define (number>? a b)
  (and (number? a) (number? b) (> a b)))
(define (symbol>? a b)
  (and (symbol? a) (symbol? b)
       (string>? (symbol->string a) (symbol->string b))))
(define (symbol=? a b)
  (and (symbol? a) (symbol? b)
       (string=? (symbol->string a) (symbol->string b))))
(define (symbol<? a b)
  (and (symbol? a) (symbol? b)
       (string<? (symbol->string a) (symbol->string b))))

(define (compare=? a b)
  (cond ((and (number? a) (number? b))
         (number=? a b))
        ((and (symbol? a) (symbol? b))
         (symbol=? a b))
        (else
         (error "Wrong argument with compare=?" a b))))
(define (compare<? a b)
  (cond ((and (number? a) (number? b))
         (number<? a b))
        ((and (symbol? a) (symbol? b))
         (symbol<? a b))
        (else
         (error "Wrong argument with compare<?" a b))))
(define (compare>? a b)
  (cond ((and (number? a) (number? b))
         (number>? a b))
        ((and (symbol? a) (symbol? b))
         (symbol>? a b))
        (else
         (error "Wrong argument with compare>?" a b))))

(define (equal-all? a b)
  (cond ((compare=? a b)
         0)
        ((compare<? a b)
         -1)
        ((compare>? a b)
        1)))
