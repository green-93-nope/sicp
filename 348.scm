(define (make-account id balance)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (let ((protected (make-serializer)))
    (define (dispatch m)
      (cond ((eq? m 'withdraw) withdraw)
            ((eq? m 'deposit)  deposit)
            ((eq? m 'serializer) protected)
            ((eq? m 'balance) balance)
            ((eq? m 'id) id)
            (else (error "Unknown request -- MAKE-ACCOUNT"
                         m))))
    dispatch))

(define (serialized-exchange account1 account2)
  (define (serialized-exchange-order smaller-account bigger-account)
    (let ((serializer-smaller (smaller-account 'serializer))
          (serializer-bigger (bigger-account 'serializer)))
      ((serializer-smaller (serializer-bigger exchange))
       smaller-account
       bigger-account)))
  (if ((account1 'id) < (account2 'id))
      (serialized-exchange-order account1 account2)
      (serialized-exchange-order account2 account1)))
